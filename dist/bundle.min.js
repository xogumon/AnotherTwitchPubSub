(()=>{"use strict";var e={};e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}();class t{constructor(){this.events={}}async emit(i,...r){let a=0;return await new Promise(async e=>{if(Array.isArray(i))await Promise.all(i.map(async e=>{await this.emit(e,...r).then(()=>{a++})}));else if("*"===i)for(const s in this.events)this.events.hasOwnProperty(s)&&this.events[s].forEach(e=>{a++,e(...r)});else if("string"==typeof i&&i.includes("*")){var[t]=i.split("*");for(const n in this.events)this.events.hasOwnProperty(n)&&n.startsWith(t)&&this.events[n].forEach(e=>{a++,e(...r)})}else"string"==typeof i&&i.toLowerCase()in this.events&&this.events[i.toLowerCase()].forEach(e=>{a++,e(...r)});e(a)}),`Emitted ${a} events to listeners`}on(e,t){Array.isArray(e)?e.map(e=>{this.on(e,t)}):"string"==typeof e&&(this.events[e]||(this.events[e]=[]),this.events[e].push(t))}removeListener(e,t){this.events[e]&&(this.events[e]=this.events[e].filter(e=>e!==t))}removeAllListeners(e){this.events[e]&&(this.events[e]=[])}once(t,s){this.on(t,e=>{this.removeListener(t,s),s(e)})}}e=WebSocket||e.g.WebSocket||window.WebSocket||self.WebSocket;if(!e)throw new Error("WebSocket is not supported by this browser.");const n=e;const r=new class{constructor(){this.options={accessToken:"",topics:[],autoConnect:!0,autoReconnect:!0,reconnectInterval:1e4,reconnectAttempts:10}}set(e){return this.options=Object.assign({},this.options,e),this}get(){return this.options}setToken(e){return this.options.accessToken=e,this}setTopics(e){return this.options.topics=e,this}findTopic(e){return-1<this.options.topics.indexOf(e)}addTopic(e){return this.options.topics.includes(e)||this.options.topics.push(e),this}removeTopic(e){e=this.options.topics.indexOf(e);return-1<e&&this.options.topics.splice(e,1),this}addTopics(e){if(Array.isArray(e))for(const t of e)this.addTopic(t);else this.addTopic(e);return this}removeTopics(e){if(Array.isArray(e))for(const t of e)this.removeTopic(t);else this.removeTopic(e);return this}},i={isEmpty(e){return""===e||0===e||!1===e||null==e||(Array.isArray(e)?0===e.length:"object"==typeof e&&0===Object.keys(e).length)},arrayLowerCase(e){return e.map(e=>e.toLowerCase())},repeat(t,s){let n=[];for(let e=0;e<s;e++)n.push(t());return n},nonce(){return this.repeat(()=>Math.random().toString(36).substring(2,15),2).join("")},toCamelCase(e){return e.replace(/\s(.)/g,e=>e.toUpperCase())},slug(e,t="-"){return"string"!=typeof e?"":("string"!=typeof t&&(t="-"),e=e.toLowerCase().replace(/[^a-z0-9]/g,t),0<t.length?e.replace(new RegExp(t+"{2,}","g"),t).replace(new RegExp(`^${t}|${t}$`,"g"),""):e)},slugToCamelCase(e){return this.slug(e).replace(/-([a-z])/g,e=>e.toUpperCase()).replace(/-/g,"")},removeDuplicates(s){return s.filter((e,t)=>s.indexOf(e)===t)},async validateToken(){const e=await fetch("https://id.twitch.tv/oauth2/validate",{headers:{"Content-Type":"application/json",Authorization:"OAuth "+r.get().accessToken}});return e.json()},async getUserId(e){let t;if("string"==typeof e)t="login="+e;else{if("object"!=typeof e)throw new Error("User must be a string or an array of strings");t=e.map(e=>"login="+e).join("&")}try{var s=await this.validateToken();if(s.client_id){if(s.login===e.toLowerCase())return[s.user_id];{const n=await fetch("https://api.twitch.tv/helix/users?"+t,{headers:{"Client-ID":s.client_id,Authorization:"Bearer "+r.get().accessToken}}),i=await n.json();if(0<i.data.length)return i.data.map(e=>e.id);throw new Error("User not found")}}throw new Error("Invalid token")}catch(e){return console.log(e)}},isNumber(e){return!isNaN(Number(e))},isValidTopic(e){try{if("string"!=typeof e)throw new Error("Invalid topic");if(100<e.length)throw new Error("Topic is too long");if(e.length<5)throw new Error("Topic is too short");if(e.includes(" "))throw new Error("Topic cannot contain spaces");if(this.getTopicsFormat(e))return!0;throw new Error("Topic is invalid")}catch(e){return!1}},getTopicsFormat(e){return{channelBitsEventsV1:"channel-bits-events-v2.$arg1$",channelBitsEventsV2:"channel-bits-events-v2.$arg1$",channelBitsBadgeUnlocks:"channel-bits-badge-unlocks.$arg1$",channelPointsChannelV1:"channel-points-channel-v1.$arg1$",channelSubscribeEventsV1:"channel-subscribe-events-v2.$arg1$",chatModeratorActions:"chat_moderator_actions.$arg1$.$arg2$",automodQueue:"automod-queue.$arg1$.$arg2$",userModerationNotifications:"user-moderation-notifications.$arg1$.$arg2$",whispers:"whispers.$arg1$"}[e=this.slugToCamelCase(e)]},filterTopics(e){return e=this.arrayLowerCase(e),(e=this.removeDuplicates(e)).filter(e=>this.isValidTopic(e))},async parseTopic(e){let[t,s,n]=e.split(".");const i=this.getTopicsFormat(t);if(i){if(s||n)this.isNumber(s)||this.isNumber(n)?this.isNumber(s)?this.isNumber(n)||([n]=await this.getUserId(n)):[s]=await this.getUserId(s):[s,n]=await this.getUserId([s,n]);else{e=await this.validateToken();if(!e.login)throw new Error("Invalid token");s=e.user_id,n=e.user_id}return this.isNumber(s)&&this.isNumber(n)?i.replace("$arg1$",s).replace("$arg2$",n):i.replace("$arg1$",s)}return null},async parseTopics(e){return this.filterTopics(e),Promise.all(e.map(e=>this.parseTopic(e)))}},a=new class extends t{constructor(){super(...arguments),this.heartbeatIntervalMs=6e4}async connect(){return await new Promise((t,s)=>{this.client=new n("wss://pubsub-edge.twitch.tv"),this.client.onopen=e=>{this.emit("connected",e),this.heartbeatInterval=setInterval(()=>this.heartbeat(),this.heartbeatIntervalMs),t(e)},this.client.onclose=e=>{const t={code:e.code,reason:e.reason,message:null,wasClean:e.wasClean};switch(e.code){case 1e3:t.message="Normal closure";break;case 1001:t.message="Going away";break;case 1002:t.message="Protocol error";break;case 1003:t.message="Unsupported data";break;case 1006:t.message="Abnormal closure";break;case 1007:t.message="Invalid data";break;case 1008:t.message="Policy violation";break;case 1009:t.message="data.Message too big";break;case 1010:t.message="Mandatory extension";break;case 1011:t.message="Internal server error";break;default:t.message="Unknown error"}this.emit("disconnected",t),clearInterval(this.heartbeatInterval),s(new Error(t.message))},this.client.onerror=e=>{this.emit("error",e),s(e)},this.client.onmessage=e=>{this.emit("raw",e);var t=JSON.parse(e.data);switch(t.type){case"PONG":this.emit("pong",Date.now());break;case"MESSAGE":this.emit("message",t);break;case"RESPONSE":t.error?this.emit("error:"+t.nonce,t):this.emit("response:"+t.nonce,t),this.emit("response",t);break;case"DISCONNECT":this.emit("disconnect",t);break;case"RECONNECT":this.emit("reconnect",t);break;default:this.emit("unknown",t)}}}),this.client}disconnect(){this.client.close()}async send(e){if(this.client.send(JSON.stringify(e)),e.nonce)return this.waitForResponse(e.nonce)}async waitForResponse(n){return new Promise((t,s)=>{this.once("response:"+n,e=>{t(e)}),this.once("error:"+n,e=>{s(e)}),this.once("timeout:"+n,()=>{s(new Error("Timeout"))}),setTimeout(()=>{this.emit("timeout:"+n)},1e3)}).then(e=>(this.removeAllListeners("response:"+n),this.removeAllListeners("error:"+n),this.removeAllListeners("timeout:"+n),e)).catch(e=>{throw this.removeAllListeners("response:"+n),this.removeAllListeners("error:"+n),this.removeAllListeners("timeout:"+n),e})}heartbeat(){this.emit("ping",Date.now()),this.send({type:"PING"})}state(){var e;switch(null==(e=this.client)?void 0:e.readyState){case n.CONNECTING:return"CONNECTING";case n.OPEN:return"CONNECTED";case n.CLOSING:return"DISCONNECTING";default:n.CLOSED;return"DISCONNECTED"}}},s=new t;window.AnotherTwitchPubSub=class{constructor(e){return this.__latency=0,this.__timestamp=0,r.set(e),r.get().autoConnect&&this.__connect(),a.on("connected",()=>this.__onConnection()),a.on("disconnected",e=>this.__onDisconnection(e)),a.on("error",e=>this.__onEventError(e)),a.on("message",e=>this.__onEventMessage(e)),a.on("ping",e=>this.__onPingSent(e)),a.on("pong",e=>this.__onPongReceived(e)),a.on("raw",e=>this.__onRawMessage(e)),a.on("response",e=>this.__onResponseMessage(e)),this}async __connect(){return await new Promise((e,t)=>{"DISCONNECTED"===a.state()?a.connect().then(()=>{e(null)}).catch(e=>{t(e)}):e(null)}),this}async __disconnect(){return await new Promise(e=>{"CONNECTED"===a.state()?a.disconnect():"DISCONNECTED"===a.state()&&e(null),a.on("disconnected",()=>{e(null)})}),this}async __reconnect(n=0){return await new Promise((e,t)=>{function s(){setTimeout(()=>{a.connect().then(()=>{e(null)}).catch(e=>{setTimeout(()=>{this.__reconnect(n+1)},r.get().reconnectInterval),t(e)})},r.get().reconnectInterval)}"CONNECTING"===a.state()&&t(new Error("Already reconnecting")),n>=r.get().reconnectAttempts&&t(new Error("Reconnect attempts exceeded")),"DISCONNECTED"===a.state()&&s(),"CONNECTED"===a.state()&&0===n&&(a.disconnect(),a.on("disconnected",()=>{s()}))}),this}async __send(e){if("CONNECTED"===a.state())return a.send(e);throw new Error("Not connected")}async __subscribe(n){return await new Promise(async(t,s)=>{var e;"CONNECTED"!==a.state()?s(new Error("Not connected")):(Array.isArray(n)||(n=[n]),0<(n=await i.parseTopics(n)).length?(e={type:"LISTEN",nonce:i.nonce(),data:{topics:n,auth_token:r.get().accessToken}},this.__send(e).then(e=>{"RESPONSE"===e.type&&i.isEmpty(e.error)?(this.__emit("subscribed",n),t(r.addTopics(n))):s(new Error("Subscription failed"))}).catch(e=>{s(e)})):t(null))}),this}async __unsubscribe(n){return await new Promise(async(t,s)=>{var e;"CONNECTED"!==a.state()?s(new Error("Not connected")):(Array.isArray(n)||(n=[n]),0<(n=await i.parseTopics(null!=n?n:r.get().topics)).length?(e={type:"UNLISTEN",nonce:i.nonce(),data:{topics:n,auth_token:r.get().accessToken}},this.__send(e).then(e=>{"RESPONSE"===e.type&&i.isEmpty(e.error)?(this.__emit("unsubscribed",n),t(r.removeTopics(n))):s(new Error("Unsubscription failed"))}).catch(e=>{s(e)})):t(null))}),this}__onConnection(){r.get().topics&&this.__subscribe(r.get().topics),this.__emit("connected")}__onDisconnection(e){!e.wasClean&&r.get().autoReconnect&&this.__reconnect(),this.__emit("disconnected",e)}__onRawMessage(e){var{type:t,data:s}=JSON.parse(e.data);switch(t){case"LISTEN":case"UNLISTEN":this.__emit(t,s);case"RECONNECT":case"DISCONNECT":this.__emit(t)}}__onEventError(e){this.__emitErrorEvent(e.error)}__emitErrorEvent(e){e instanceof Error?this.__emit("error",e.message):this.__emit("error",e)}__onEventMessage(e){this.__emit("message",e);const{topic:t,message:s}=e.data;this.__emit(t,JSON.parse(s));var{type:n,data:i}=JSON.parse(s),r=["channel-points-channel","channel-bits-events","channel-bits-badge-unlocks","channel-subscribe-events","whispers"].find(e=>t.includes(e));switch(r){case"channel-points-channel":this.__onChannelPointsEvent({type:n,data:i});break;case"channel-bits-events":case"channel-bits-badge-unlocks":this.__onBitsEvent({type:r,data:i});break;case"channel-subscribe-events":this.__onSubEvent(i);break;case"whispers":this.__onWhisperEvent({type:i.type,data:e.data_object})}}__onResponseMessage(e){let t;if(null!=e&&e.error){switch(e.error){case"ERR_BADAUTH":t="Invalid authentication token";break;case"ERR_BADTOPIC":t="Invalid topic";break;case"ERR_BADMESSAGE":t="Invalid message";break;case"ERR_SERVER":t="Server error";break;default:t="Unknown error"+e.error}this.__emitErrorEvent(t)}else e&&this.__emit("response",e)}__onPingSent(e){this.__timestamp=e,this.__emit("ping")}__onPongReceived(e){this.__latency=e-this.__timestamp,this.__emit("pong",this.__latency),1e4<this.__latency?r.get().autoReconnect?this.__reconnect():this.__emit("warning",{message:"Latency is very high",latency:this.__latency}):1e3<this.__latency?this.__emit("warning",{message:"Latency is high",latency:this.__latency}):100<this.__latency&&this.__emit("warning",{message:"Latency is medium",latency:this.__latency})}__onBitsEvent({type:e,data:t}){switch(e){case"channel-bits-events":this.__emit("bits",t);break;case"channel-bits-badge-unlocks":this.__emit("bitsbadge",t);break;default:this.__emitErrorEvent(new Error("Unknown message type: "+e))}}__onSubEvent(e){this.__emit(e.context,{userId:e.user_id||null,userName:e.user_name||null,displayName:e.display_name||null,channelId:e.channel_id,channelName:e.channel_name,time:e.time,subPlan:e.sub_plan,subPlanName:e.sub_plan_name,isGift:e.is_gift||!1,months:e.months||null,cumulativeMonths:e.cumulative_months||null,streakMonths:e.streak_months||null,subMessage:e.sub_message||null,recipientId:e.recipient_id||null,recipientUserName:e.recipient_user_name||null,recipientDisplayName:e.recipient_display_name||null,multiMonthDuration:e.multi_month_duration||null})}__onWhisperEvent(e){this.__emit(e.type,e.data)}__onChannelPointsEvent({type:e,data:t}){"reward-redeemed"===e?(this.__emit("reward",t.redemption),this.__emit(e,t.redemption)):this.__emit(e,t)}__emit(e,...t){return e=i.slug(e),s.emit(e,...t),this}on(e,t){if(""===(e=i.slug(e)))throw new Error("Invalid event name");if("function"!=typeof t)throw new Error("Invalid callback");return s.on(e,t),this}off(e,t){if(""===(e=i.slug(e)))throw new Error("Invalid event name");if("function"!=typeof t)throw new Error("Invalid callback");return s.removeListener(e,t),this}connect(){if(r.get().autoConnect)throw new Error("autoConnect is enabled");return"CONNECTED"!==a.state()?this.__connect():Promise.resolve(this)}reconnect(){if(r.get().autoReconnect)throw new Error("autoReconnect is enabled");return this.__reconnect()}disconnect(){return this.__disconnect()}lastLatency(){return this.__latency}subscribe(e){return this.__subscribe(e)}unsubscribe(e){return this.__unsubscribe(e)}registeredTopics(){return r.get().topics||[]}registeredTopicsCount(){return r.get().topics.length}isRegisteredTopic(e){return r.get().topics.includes(e)}state(){return a.state()}}})();
//# sourceMappingURL=bundle.min.js.map